Index: 5AI.1.12/mydroid/system/core/init/devices.c
===================================================================
--- 5AI.1.12.orig/mydroid/system/core/init/devices.c	2012-07-05 16:22:51.350810645 +0200
+++ 5AI.1.12/mydroid/system/core/init/devices.c	2012-07-05 16:25:44.683281442 +0200
@@ -190,6 +190,7 @@
      * racy. Fixing the gid race at least fixed the issue with system_server
      * opening dynamic input devices under the AID_INPUT gid. */
     setegid(gid);
+    PRINTF("%s: '%s' (%d:%d) %s\n", __func__, path, major, minor, block ? "block" : "character");
     mknod(path, mode, dev);
     chown(path, uid, -1);
     setegid(AID_ROOT);
Index: 5AI.1.12/mydroid/system/core/init/init.c
===================================================================
--- 5AI.1.12.orig/mydroid/system/core/init/init.c	2012-07-05 16:22:51.630798481 +0200
+++ 5AI.1.12/mydroid/system/core/init/init.c	2012-07-05 16:25:44.715280053 +0200
@@ -495,6 +495,7 @@
 void execute_one_command(void)
 {
     int ret;
+    int i;
 
     if (!cur_action || !cur_command || is_last_command(cur_action, cur_command)) {
         cur_action = action_remove_queue_head();
@@ -510,8 +511,14 @@
     if (!cur_command)
         return;
 
+    INFO("-> starting command '%s'\n", cur_command->args[0]);
+    for (i = 1; i < cur_command->nargs; i ++)
+	INFO("\t\t[ %d ] = %s\n", i, cur_command->args[i]);
     ret = cur_command->func(cur_command->nargs, cur_command->args);
-    INFO("command '%s' r=%d\n", cur_command->args[0], ret);
+    INFO("<- command '%s' r=%d\n", cur_command->args[0], ret);
+    if (ret == 0)
+	return;
+    INFO("   errno = %d, text = '%s'\n", errno, strerror(errno));
 }
 
 static int wait_for_coldboot_done_action(int nargs, char **args)
@@ -724,8 +731,10 @@
     /* don't expose the raw commandline to nonpriv processes */
     chmod("/proc/cmdline", 0440);
     get_hardware_name(hardware, &revision);
+    PRINTF("hardware = '%s'\n", hardware);
 #ifdef OMAP_ENHANCEMENT
     get_processor_name(processor);
+    PRINTF("processor = '%s'\n", processor);
 #endif
     snprintf(tmp, sizeof(tmp), "/init.%s.rc", hardware);
     init_parse_config_file(tmp);
Index: 5AI.1.12/mydroid/system/core/init/init_parser.c
===================================================================
--- 5AI.1.12.orig/mydroid/system/core/init/init_parser.c	2012-07-05 16:22:51.826789965 +0200
+++ 5AI.1.12/mydroid/system/core/init/init_parser.c	2012-07-05 16:25:44.715280053 +0200
@@ -236,6 +236,7 @@
     data = read_file(fn, 0);
     if (!data) return -1;
 
+    PRINTF("### Parsing '%s'\n", fn);
     parse_config(fn, data);
     DUMP();
     return 0;
@@ -309,6 +310,8 @@
 {
     struct listnode *node;
     struct service *svc;
+
+    printf("### Starting services by class '%s'\n", classname);
     list_for_each(node, &service_list) {
         svc = node_to_item(node, struct service, slist);
         if (!strcmp(svc->classname, classname)) {
@@ -335,6 +338,8 @@
 {
     struct listnode *node;
     struct action *act;
+
+    printf("\n\n### Trigger: '%s'\n", trigger);
     list_for_each(node, &action_list) {
         act = node_to_item(node, struct action, alist);
         if (!strcmp(act->name, trigger)) {
Index: 5AI.1.12/mydroid/system/core/init/log.h
===================================================================
--- 5AI.1.12.orig/mydroid/system/core/init/log.h	2012-07-05 16:22:52.066779537 +0200
+++ 5AI.1.12/mydroid/system/core/init/log.h	2012-07-05 16:25:44.715280053 +0200
@@ -22,7 +22,7 @@
 #define ERROR(x...)   KLOG_ERROR("init", x)
 #define NOTICE(x...)  KLOG_NOTICE("init", x)
 #define INFO(x...)    KLOG_INFO("init", x)
-
+#define PRINTF(x...)  klog_write(1, "<1>init:" x)
 #define LOG_UEVENTS        0  /* log uevent messages if 1. verbose */
 
 #endif
